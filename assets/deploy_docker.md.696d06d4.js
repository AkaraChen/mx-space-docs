import{_ as s,c as a,o as n,a as l}from"./app.3b7d96fb.js";const p='{"title":"一键式部署","description":"","frontmatter":{},"headers":[{"level":2,"title":"准备","slug":"准备"},{"level":2,"title":"安装 Node.js 和 zx","slug":"安装-node-js-和-zx"},{"level":2,"title":"克隆仓库","slug":"克隆仓库"},{"level":2,"title":"部署整个环境","slug":"部署整个环境"},{"level":2,"title":"仅部署服务和主站前端","slug":"仅部署服务和主站前端"},{"level":2,"title":"仅部署服务","slug":"仅部署服务"}],"relativePath":"deploy/docker.md"}',e={},o=[l('<h1 id="一键式部署" tabindex="-1">一键式部署 <a class="header-anchor" href="#一键式部署" aria-hidden="true">#</a></h1><blockquote><p>使用 Docker Compose 可以很容易的部署整个环境。</p></blockquote><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>❗ 注意：文档未考虑对 WIndows 的支持工作，Windows 的使用者请自行处理兼容性问题； Linux 内核版本 &gt; 4.18，建议使用 5.X 版本的内核；内存 &gt; 1 GiB ！</p></div><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-hidden="true">#</a></h2><p>开始之前，你需要安装好 Docker 和 Docker Compose，没安装的可参考<a href="https://mx-docs.iucky.cn/deploy/bt-panel.html#%E5%AE%89%E8%A3%85-docker" target="_blank" rel="noopener noreferrer">此处教程</a>。你还需要安装好 Node.js 和 zx。</p><h2 id="安装-node-js-和-zx" tabindex="-1">安装 Node.js 和 zx <a class="header-anchor" href="#安装-node-js-和-zx" aria-hidden="true">#</a></h2><div class="language-bash"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#DBD7CA;">curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n</span></span>\n<span class="line"><span style="color:#758575;"># 如果无法访问 Github raw 的话就执行下面这条命令</span></span>\n<span class="line"><span style="color:#758575;"># curl -L https://github.do/https://raw.githubusercontent.com/tj/n/master/bin/n -o n</span></span>\n<span class="line"><span style="color:#CB7676;">export</span><span style="color:#DBD7CA;"> N_PREFIX=</span><span style="color:#858585;">$</span><span style="color:#B8A965;">HOME</span><span style="color:#DBD7CA;">/.n</span></span>\n<span class="line"><span style="color:#CB7676;">export</span><span style="color:#DBD7CA;"> PATH=</span><span style="color:#858585;">$</span><span style="color:#B8A965;">N_PREFIX</span><span style="color:#DBD7CA;">/bin:</span><span style="color:#858585;">$</span><span style="color:#B8A965;">PATH</span></span>\n<span class="line"><span style="color:#758575;"># export N_NODE_MIRROR=https://npmmirror.com/mirrors/node  #如果官方源下载慢的话可以执行这条换国内源</span></span>\n<span class="line"><span style="color:#DBD7CA;">bash n lts</span></span>\n<span class="line"><span style="color:#CB7676;">export</span><span style="color:#DBD7CA;"> N_PRESERVE_NPM=1</span></span>\n<span class="line"><span style="color:#DBD7CA;">npm i -g npm@latest</span></span>\n<span class="line"><span style="color:#DBD7CA;">npm i -g yarn zx pnpm n</span></span>\n<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#393A34;">curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n</span></span>\n<span class="line"><span style="color:#A0ADA0;"># 如果无法访问 Github raw 的话就执行下面这条命令</span></span>\n<span class="line"><span style="color:#A0ADA0;"># curl -L https://github.do/https://raw.githubusercontent.com/tj/n/master/bin/n -o n</span></span>\n<span class="line"><span style="color:#AB5959;">export</span><span style="color:#393A34;"> N_PREFIX=</span><span style="color:#8E8F8B;">$</span><span style="color:#8C862B;">HOME</span><span style="color:#393A34;">/.n</span></span>\n<span class="line"><span style="color:#AB5959;">export</span><span style="color:#393A34;"> PATH=</span><span style="color:#8E8F8B;">$</span><span style="color:#8C862B;">N_PREFIX</span><span style="color:#393A34;">/bin:</span><span style="color:#8E8F8B;">$</span><span style="color:#8C862B;">PATH</span></span>\n<span class="line"><span style="color:#A0ADA0;"># export N_NODE_MIRROR=https://npmmirror.com/mirrors/node  #如果官方源下载慢的话可以执行这条换国内源</span></span>\n<span class="line"><span style="color:#393A34;">bash n lts</span></span>\n<span class="line"><span style="color:#AB5959;">export</span><span style="color:#393A34;"> N_PRESERVE_NPM=1</span></span>\n<span class="line"><span style="color:#393A34;">npm i -g npm@latest</span></span>\n<span class="line"><span style="color:#393A34;">npm i -g yarn zx pnpm n</span></span>\n<span class="line"></span></code></pre></div><h2 id="克隆仓库" tabindex="-1">克隆仓库 <a class="header-anchor" href="#克隆仓库" aria-hidden="true">#</a></h2><div class="language-bash"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#DBD7CA;">git clone https://github.com/mx-space/docker --depth=1</span></span>\n<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#393A34;">git clone https://github.com/mx-space/docker --depth=1</span></span>\n<span class="line"></span></code></pre></div><h2 id="部署整个环境" tabindex="-1">部署整个环境 <a class="header-anchor" href="#部署整个环境" aria-hidden="true">#</a></h2><p>所部署的环境：kami + mx-server + caddy2</p><p>在此之前，你需要把域名指向当前服务器 IP。</p><div class="language-bash"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#E0A569;">cd</span><span style="color:#DBD7CA;"> docker</span></span>\n<span class="line"><span style="color:#DBD7CA;">npm install</span></span>\n<span class="line"><span style="color:#DBD7CA;">zx ./build.mjs</span></span>\n<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#B58451;">cd</span><span style="color:#393A34;"> docker</span></span>\n<span class="line"><span style="color:#393A34;">npm install</span></span>\n<span class="line"><span style="color:#393A34;">zx ./build.mjs</span></span>\n<span class="line"></span></code></pre></div><p>实例输入：</p><div class="language-"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#dbd7ca;">你的域名为：（需要提前绑定）: innei.ren</span></span>\n<span class="line"><span style="color:#dbd7ca;">你的邮箱为: (若该步留空，则不部署 Caddy 服务): tukon@gmail.com</span></span>\n<span class="line"><span style="color:#dbd7ca;">是否部署 Caddy 2.0？ (y/n): y</span></span>\n<span class="line"><span style="color:#dbd7ca;"></span></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#393a34;">你的域名为：（需要提前绑定）: innei.ren</span></span>\n<span class="line"><span style="color:#393a34;">你的邮箱为: (若该步留空，则不部署 Caddy 服务): tukon@gmail.com</span></span>\n<span class="line"><span style="color:#393a34;">是否部署 Caddy 2.0？ (y/n): y</span></span>\n<span class="line"><span style="color:#393a34;"></span></span></code></pre></div><p>待流程执行完毕，进入 <code>https://你的域名/proxy/qaqdmin</code></p><h2 id="仅部署服务和主站前端" tabindex="-1">仅部署服务和主站前端 <a class="header-anchor" href="#仅部署服务和主站前端" aria-hidden="true">#</a></h2><p>所部署的环境：kami + mx-server</p><p>你不需要 IP 指向。但是需要手动处理服务器反代。</p><div class="language-bash"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#E0A569;">cd</span><span style="color:#DBD7CA;"> docker</span></span>\n<span class="line"><span style="color:#DBD7CA;">npm install</span></span>\n<span class="line"><span style="color:#DBD7CA;">zx ./build.mjs</span></span>\n<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#B58451;">cd</span><span style="color:#393A34;"> docker</span></span>\n<span class="line"><span style="color:#393A34;">npm install</span></span>\n<span class="line"><span style="color:#393A34;">zx ./build.mjs</span></span>\n<span class="line"></span></code></pre></div><p>实例输入：</p><div class="language-"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#dbd7ca;">你的域名为：（需要提前绑定）: innei.ren</span></span>\n<span class="line"><span style="color:#dbd7ca;">你的邮箱为: (此步留空，则不部署 Caddy 服务):</span></span>\n<span class="line"><span style="color:#dbd7ca;"></span></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#393a34;">你的域名为：（需要提前绑定）: innei.ren</span></span>\n<span class="line"><span style="color:#393a34;">你的邮箱为: (此步留空，则不部署 Caddy 服务):</span></span>\n<span class="line"><span style="color:#393a34;"></span></span></code></pre></div><p>待流程执行完毕，进入 127.0.0.1:2333/proxy/qaqdmin。</p><h2 id="仅部署服务" tabindex="-1">仅部署服务 <a class="header-anchor" href="#仅部署服务" aria-hidden="true">#</a></h2><div class="language-bash"><pre class="shiki shiki-dark" style="background-color:#121212;"><code><span class="line"><span style="color:#DBD7CA;">wget https://cdn.jsdelivr.net/gh/mx-space/mx-server@master/docker-compose.yml</span></span>\n<span class="line"><span style="color:#DBD7CA;">docker compose up -d</span></span>\n<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code><span class="line"><span style="color:#393A34;">wget https://cdn.jsdelivr.net/gh/mx-space/mx-server@master/docker-compose.yml</span></span>\n<span class="line"><span style="color:#393A34;">docker compose up -d</span></span>\n<span class="line"></span></code></pre></div><p>待流程执行完毕，进入 127.0.0.1:2333/proxy/qaqdmin。</p>',26)];var c=s(e,[["render",function(s,l,p,e,c,r){return n(),a("div",null,o)}]]);export{p as __pageData,c as default};
